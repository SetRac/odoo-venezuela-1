-
  2. Tests for iva purchase wh
-
  2.1 Check conditions for creating the document, first main company configuration
-
  !assert {model: res.partner, id: base.main_company}:
    - wh_iva_agent
    - wh_iva_rate
    - vat_subjected
-
  2.2 Check partner configuration
-
  !assert {model: res.partner, id: base.res_partner_23}:
    - wh_iva_agent
    - wh_iva_rate
    - vat_subjected
-
  2.3 Check IVA configuration
-
  !assert {model: account.tax, id: l10n_ve_fiscal_requirements.iva_purchase1}:
    - amount
    - type_tax_use == 'purchase'
    - ret
    - wh_vat_collected_account_id
    - wh_vat_paid_account_id
-
  2.4 I create a purchase invoice
-
  !record {model: account.invoice, id: test_purchase_iva02, view: account.invoice_supplier_form, context:{'default_type': 'in_invoice', 'type': 'in_invoice', 'journal_type': 'purchase'}}:
    type: in_invoice
    state: draft
    company_id: base.main_company
    date_invoice: !eval time.strftime('%Y-%m-%d')
    partner_id: base.res_partner_23
    reference_type: none
    journal_id: 
    wh_iva: True
    invoice_line:
      - product_id: product.product_product_3
        quantity: 3
        uos_id: product.product_uom_unit
        price_unit: 10
        name: PC3
        invoice_line_tax_id:
        - l10n_ve_fiscal_requirements.iva_purchase1
      - product_id: product.product_product_4
        quantity: 5
        uos_id: product.product_uom_unit
        price_unit: 20
        name: PC2
        invoice_line_tax_id:
        - l10n_ve_fiscal_requirements.iva_purchase1
-
  2.5 I check that Initially supplier invoice is in the "Draft" state
-
  !python {model: account.invoice}: |
    ap_obj=self.pool.get('account.period')
    import time
    period = ap_obj.find(cr, uid, time.strftime('%Y/%m/%d'), context={'company_id':ref("base.main_company")})
    assert period, 'There aren\'t periods for this date'
    ap_obj.write(cr, uid, period, {'special':False})
    self.write(cr,uid,ref('test_purchase_iva02'),{'journal_id':ref('account.expenses_journal'),'type':'in_invoice'})
    ai_brw = self.browse(cr,uid,ref('test_purchase_iva02'))
    assert ai_brw.type == 'in_invoice', "Not the intended type. It should be 'in_invoice' not '%s'"%ai_brw.type
    assert ai_brw.state == 'draft', "Not the intended state. It should be 'draft' not '%s'"%ai_brw.state
    assert ai_brw.journal_id.id == ref('account.expenses_journal'), "Not the intended Journal. It should be 'Expenses Journal - (test)' not '%s'"%ai_brw.journal_id.name
-
  2.6 I change the state of invoice to "Proforma2" by clicking PRO-FORMA button
-
  !workflow {model: account.invoice, action: invoice_proforma2, ref: test_purchase_iva02}
-
  2.7 I check that the invoice state is now "Proforma2"
-
  !assert {model: account.invoice, id: test_purchase_iva02}:
    - state == 'proforma2'
-
  2.8 I create invoice by clicking on Create button
-
  !workflow {model: account.invoice, action: invoice_open, ref: test_purchase_iva02}
-
  2.9 I check that the invoice state is "Open"
-
  !assert {model: account.invoice, id: test_purchase_iva02, string: Invoice is not in open state}:
    - state == 'open'
-
  2.10 Set control number for the invoice
-
  !python {model: account.invoice}: |
    self.write(cr, uid, [ref("test_purchase_iva02")], {'nro_ctrl':'iva002'})
    ai_brw = self.browse(cr, uid, ref("test_purchase_iva02"))
    assert ai_brw.nro_ctrl=='iva002', "Not the intended Control Number. It should be 'iva002' not '%s'"%ai_brw.nro_ctrl
    assert ai_brw.journal_id.id == ref('account.expenses_journal'), "Not the intended Journal. It should be 'Expenses Journal - (test)' not '%s'"%ai_brw.journal_id.name
